/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.alacrity.openingdesign.messageportlet.model.model;

import com.liferay.portal.kernel.annotation.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the SKQuestion service. Represents a row in the &quot;SK_SKQuestion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.alacrity.openingdesign.messageportlet.model.model.impl.SKQuestionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.alacrity.openingdesign.messageportlet.model.model.impl.SKQuestionImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a s k question model instance should use the {@link SKQuestion} interface instead.
 * </p>
 *
 * @author Henricor
 * @see SKQuestion
 * @see com.alacrity.openingdesign.messageportlet.model.model.impl.SKQuestionImpl
 * @see com.alacrity.openingdesign.messageportlet.model.model.impl.SKQuestionModelImpl
 * @generated
 */
public interface SKQuestionModel extends BaseModel<SKQuestion> {
	/**
	 * Gets the primary key of this s k question.
	 *
	 * @return the primary key of this s k question
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this s k question
	 *
	 * @param pk the primary key of this s k question
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the question_ i d of this s k question.
	 *
	 * @return the question_ i d of this s k question
	 */
	public long getQuestion_ID();

	/**
	 * Sets the question_ i d of this s k question.
	 *
	 * @param Question_ID the question_ i d of this s k question
	 */
	public void setQuestion_ID(long Question_ID);

	/**
	 * Gets the parent_ i d of this s k question.
	 *
	 * @return the parent_ i d of this s k question
	 */
	public long getParent_ID();

	/**
	 * Sets the parent_ i d of this s k question.
	 *
	 * @param Parent_ID the parent_ i d of this s k question
	 */
	public void setParent_ID(long Parent_ID);

	/**
	 * Gets the title of this s k question.
	 *
	 * @return the title of this s k question
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this s k question.
	 *
	 * @param Title the title of this s k question
	 */
	public void setTitle(String Title);

	/**
	 * Gets the url of this s k question.
	 *
	 * @return the url of this s k question
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this s k question.
	 *
	 * @param Url the url of this s k question
	 */
	public void setUrl(String Url);

	/**
	 * Gets the post_ date of this s k question.
	 *
	 * @return the post_ date of this s k question
	 */
	public long getPost_Date();

	/**
	 * Sets the post_ date of this s k question.
	 *
	 * @param Post_Date the post_ date of this s k question
	 */
	public void setPost_Date(long Post_Date);

	/**
	 * Gets the user_ i d of this s k question.
	 *
	 * @return the user_ i d of this s k question
	 */
	public long getUser_ID();

	/**
	 * Sets the user_ i d of this s k question.
	 *
	 * @param User_ID the user_ i d of this s k question
	 */
	public void setUser_ID(long User_ID);

	/**
	 * Gets the company id of this s k question.
	 *
	 * @return the company id of this s k question
	 */
	public long getCompanyId();

	/**
	 * Sets the company id of this s k question.
	 *
	 * @param companyId the company id of this s k question
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the group id of this s k question.
	 *
	 * @return the group id of this s k question
	 */
	public long getGroupId();

	/**
	 * Sets the group id of this s k question.
	 *
	 * @param groupId the group id of this s k question
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets a copy of this s k question as an escaped model instance by wrapping it with an {@link com.liferay.portal.kernel.bean.AutoEscapeBeanHandler}.
	 *
	 * @return the escaped model instance
	 * @see com.liferay.portal.kernel.bean.AutoEscapeBeanHandler
	 */
	public SKQuestion toEscapedModel();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(SKQuestion skQuestion);

	public int hashCode();

	public String toString();

	public String toXmlString();
}